{spacing}       ;
\n              { line++; }
{sugar}         { return yytext[0]; }
"="               { return (ASSIGN); }
"=="              { return (EQUAL); }
"!="              { return (NE); }
">"               { return (G); }
">="              { return (GE); }
"<"               { return (L); }
"<="              { return (LE); }
"+"               { return (PLUS); }
"-"               { return (MINUS); }
"*"               { return (MUL); }
"/"               { return (DIV); }
program         { return (PROGRAM); }
type            { return (TYPE); }
var             { return (VAR); }
const           { return (CONST); }
proc            { return (PROC); }
func            { return (FUNC); }
out             { return (OUT); }
inout           { return (INOUT); }
begin           { return (BEGIN); }
end             { return (END); }
break           { return (BREAK); }
exit            { return (EXIT); }
if              { return (IF); }
then            { return (THEN); }
else            { return (ELSE); }
elsif           { return (ELSIF); }
while           { return (WHILE); }           
do              { return (DO); }
repeat          { return (REPEAT); }
until           { return (UNTIL); }
for             { return (FOR); }
to              { return (TO); }
input           { return (INPUT); }
output          { return (OUTPUT); }
and             { return (AND); }
or              { return (OR); }
not             { return (NOT); }
integer         { return (INTEGER); }
string          { return (STRING); }
boolean         { return (BOOLEAN); }
